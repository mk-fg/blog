#!/usr/bin/env python2
# -*- coding: utf-8 -*- #
from __future__ import unicode_literals, print_function

import itertools as it, operator as op, functools as ft

try:
	import webapp2
	from legacy_redirect_list import redirects
	from google.appengine.ext import ereporter
except ImportError:
	if __name__ != '__main__': raise


if __name__ == '__main__':

	from os.path import join, dirname
	import os, sys

	with open(join(dirname(__file__), 'legacy_redirect_list.py'), 'w') as dst:
		print(( '# This file was autogenerated by {},'
			'\n#  any manual changes here will be lost' ).format(__file__), file=dst)
		print('redirects = {', file=dst)
		for line in it.imap(op.methodcaller('strip'), sys.stdin):
			path_src, path_dst = line.split()
			print('  "{}": "{}",'.format(path_src, path_dst), file=dst)
		print('}', file=dst)


else:

	class MainPage(webapp2.RequestHandler):

		def get(self):
			src = self.request.path.strip('/')
			try: dst = '/' + redirects[src]
			except KeyError: raise webapp2.exc.HTTPNotFound()
			else: self.redirect(dst, permanent=True)

	ereporter.register_logger()
	app = webapp2.WSGIApplication([('/.*', MainPage)])
